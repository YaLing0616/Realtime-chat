{"version":3,"sources":["serviceWorker.js","components/login/styles.js","components/login/login.js","components/signup/styles.js","components/signup/signup.js","components/dashboard/dashboard.js","index.js"],"names":["Boolean","window","location","hostname","match","styles","theme","main","width","display","marginLeft","spacing","marginRight","breakpoints","up","paper","marginTop","flexDirection","alignItems","padding","form","submit","noAccountHeader","signUpLink","textDecoration","color","fontWeight","errorText","textAlign","Login","submitLogin","e","preventDefault","firebase","auth","signInWithEmailAndPassword","state","email","password","then","props","history","push","err","code","setState","LoginError","console","log","userTyping","type","target","value","classes","this","className","CssBaseline","Paper","Typography","component","variant","onSubmit","FormControl","required","fullWidth","margin","InputLabel","htmlFor","Input","autoComplete","onChange","autoFocus","id","Button","to","Component","withStyles","hasAccountHeader","logInLink","require","SignUp","passwordConfirmation","submitSignup","formIsValid","createUserWithEmailAndPassword","authRes","userObj","uid","user","firestore","collection","doc","set","dbError","signupError","authError","Dashboard","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","routing","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90bde12f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const styles = theme => ({\n    main: {\n        width: 'auto',\n        display: 'block', // Fix IE 11 issue.\n        marginLeft: theme.spacing(1) * 3,\n        marginRight: theme.spacing(1) * 3,\n        [theme.breakpoints.up(400 + theme.spacing(1) * 3 * 2)]: {\n            width: 400,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(1) * 8,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `${theme.spacing(1) * 2}px ${theme.spacing(1) * 3}px ${theme.spacing(1) * 3}px`,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        marginTop: theme.spacing(1) * 3,\n    },\n    noAccountHeader: {\n        width: '100%'\n    },\n    signUpLink: {\n        width: '100%',\n        textDecoration: 'none',\n        color: '#303f9f',\n        fontWeight: 'bolder'\n    },\n    errorText: {\n        color: 'red',\n        textAlign: 'center'\n    }\n});\n\nexport default styles;","import React, { Component } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport { Link } from 'react-router-dom';\nimport firebase from 'firebase';\nclass Login extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: null,\n            password: null,\n            LoginError: ''\n        };\n    }\n\n    submitLogin = (e) => {\n        e.preventDefault();\n\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then(() => {\n                this.props.history.push('/Realtime-chat/dashboard');\n            }, err => {\n                switch (err.code) {\n                    case 'auth/wrong-password':\n                        this.setState({\n                            LoginError: '密碼輸入錯誤！',\n                        });\n                        break;\n\n                    case 'auth/invalid-email':\n                        this.setState({\n                            LoginError: '信箱格式輸入錯誤！',\n                        });\n                        break;\n                    \n                    case 'auth/user-not-found':\n                        this.setState({\n                            LoginError: '此信箱尚未註冊！',\n                        });\n                        break;\n                \n                    default:\n                        break;\n                }\n                console.log(err);\n            });\n    }\n\n    userTyping = (type, e) => {\n        switch (type) {\n            case 'email':\n                this.setState({\n                    email: e.target.value,\n                });\n                break;\n\n            case 'password':\n                this.setState({\n                    password: e.target.value,\n                });\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <main className={classes.main}>\n                <CssBaseline></CssBaseline>\n                <Paper className={classes.paper}>\n                    <Typography component='h1' variant='h5'>\n                        登入！\n                    </Typography>\n                    <form onSubmit={(e) => this.submitLogin(e)} className={classes.form}>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='login-email-input'>請輸入信箱</InputLabel>\n                            <Input autoComplete='email' onChange={(e) => this.userTyping('email', e)} autoFocus id='login-email-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='login-password-input'>請輸入密碼</InputLabel>\n                            <Input type='password' onChange={(e) => this.userTyping('password', e)} id='login-password-input'></Input>\n                        </FormControl>\n                        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>登入</Button>\n                    </form>\n                    {this.state.LoginError\n                        ?\n                        <Typography className={classes.errorText}>\n                            {this.state.LoginError}\n                        </Typography>\n                        :\n                        null\n                    }\n                    <Typography className={classes.noAccountHeader}>還沒有帳號？</Typography>\n                    <Link className={classes.signUpLink} to='/Realtime-chat/signup'>馬上去註冊</Link>\n                </Paper>\n            </main>\n        );\n    }\n}\n\nexport default withStyles(styles)(Login);","const styles = theme => ({\n    main: {\n      width: 'auto',\n      display: 'block', // Fix IE 11 issue.\n      marginLeft: theme.spacing(1) * 3,\n      marginRight: theme.spacing(1) * 3,\n      [theme.breakpoints.up(400 + theme.spacing(1) * 3 * 2)]: {\n        width: 400,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    paper: {\n      marginTop: theme.spacing(1) * 8,\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      padding: `${theme.spacing(1) * 2}px ${theme.spacing(1) * 3}px ${theme.spacing(1) * 3}px`,\n    },\n    form: {\n      width: '100%',\n      marginTop: theme.spacing(1),\n    },\n    submit: {\n      marginTop: theme.spacing(1) * 3,\n    },\n    hasAccountHeader: {\n      width: '100%'\n    },\n    logInLink: {\n      width: '100%',\n      textDecoration: 'none',\n      color: '#303f9f',\n      fontWeight: 'bolder'\n    },\n    errorText: {\n      color: 'red',\n      textAlign: 'center'\n    }\n  });\n  \n  export default styles;","import React, { Component } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport styles from './styles';\nimport { Link } from 'react-router-dom';\n\nconst firebase = require(\"firebase\");\n\nclass SignUp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            email: null,\n            password: null,\n            passwordConfirmation: null,\n            signupError: ''\n        };\n    }\n\n    userTyping = (type, e) => {\n        switch (type) {\n            case 'email':\n                this.setState({\n                    email: e.target.value,\n                });\n                break;\n            \n            case 'password':\n                this.setState({\n                    password: e.target.value,\n                });\n                break;\n\n            case 'passwordConfirmation':\n                this.setState({\n                    passwordConfirmation: e.target.value,\n                });\n                break;\n    \n            default:\n                break;\n        }\n    }\n\n    submitSignup = (e) => {\n        e.preventDefault();\n        if(!this.formIsValid()) {\n            this.setState({\n                signupError: '密碼確認錯誤，請重新輸入！',\n            });\n            return;\n        }\n\n        firebase\n            .auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then(authRes => {\n                console.log(authRes);\n                const userObj = {\n                    uid: authRes.user.uid,\n                    email: authRes.user.email,\n                };\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(this.state.email)\n                .set(userObj)\n                .then(() => {\n                    this.props.history.push('/Realtime-chat/login')\n                }, dbError => {\n                    console.log(dbError);\n                    this.setState({\n                        signupError: 'Failed to add user!'\n                    });\n                })\n            }, authError => {\n                console.log(authError);\n                this.setState({\n                    signupError: 'Failed to add user!'\n                });\n            })\n    }\n\n    formIsValid = () => this.state.password === this.state.passwordConfirmation;\n\n    render() {\n        const { classes } = this.props;\n        return(\n            <main className={classes.main}>\n                <CssBaseline></CssBaseline>\n                <Paper className={classes.paper}>\n                    <Typography component='h1' variant='h5'>\n                        註冊!\n                    </Typography>\n                    <form onSubmit={(e) => this.submitSignup(e)} className={classes.form}>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-email-input'>請輸入信箱</InputLabel>\n                            <Input autoComplete='email' onChange={(e) => this.userTyping('email', e)} autoFocus id='signup-email-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-password-input'>請輸入密碼</InputLabel>\n                            <Input type='password' onChange={(e) => this.userTyping('password', e)} id='signup-password-input'></Input>\n                        </FormControl>\n                        <FormControl required fullWidth margin='normal'>\n                            <InputLabel htmlFor='signup-password-confirmation-input'>再次確認密碼</InputLabel>\n                            <Input type='password' onChange={(e) => this.userTyping('passwordConfirmation', e)} id='signup-password-confirmation-input'></Input>\n                        </FormControl>\n                        <Button type='submit' fullWidth variant='contained' color='primary' className={classes.submit}>註冊</Button>\n                    </form>\n                    {this.state.signupError\n                    ?\n                        <Typography className={classes.errorText}>\n                            {this.state.signupError}\n                        </Typography>\n                    :\n                        null\n                    }\n                    <Typography className={classes.hasAccountHeader}>已經有帳號了？</Typography>\n                    <Link className={classes.logInLink} to='/Realtime-chat/login'>馬上去登入</Link>\n                </Paper>\n            </main>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignUp);","import React, { Component } from 'react';\n\nclass Dashboard extends Component {\n    render() {\n        return(\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default Dashboard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport firebase from 'firebase/app';\n\nimport Login from './components/login/login';\nimport SignUp from './components/signup/signup';\nimport Dashboard from './components/dashboard/dashboard';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyCcyufPWaWOcLvbBPgBArNMH5Q_gi9oBAY\",\n    authDomain: \"realtime-chat-2598f.firebaseapp.com\",\n    databaseURL: \"https://realtime-chat-2598f.firebaseio.com\",\n    projectId: \"realtime-chat-2598f\",\n    storageBucket: \"realtime-chat-2598f.appspot.com\",\n    messagingSenderId: \"644826752739\",\n    appId: \"1:644826752739:web:9912f44a709048c9e947d6\",\n    measurementId: \"G-MB5NYNLCK2\"\n});\n\nconst routing = (\n    <Router>\n        <div id='routing-container'>\n            <Route path='/Realtime-chat/login' component={Login} />\n            <Route path='/Realtime-chat/signup' component={SignUp} />\n            <Route path='/Realtime-chat/dashboard' component={Dashboard} />\n        </div>\n    </Router>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}